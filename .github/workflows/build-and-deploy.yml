name: CI
on:
  push:
  pull_request:
  schedule:
    - cron: '0 3 * * SUN'
    
jobs:
  build:
    strategy:
      matrix:
        os: [windows, ubuntu]
        version: [8, 11, '']
        vm: [hotspot, openj9]
    runs-on: ${{ matrix.os }}-latest
    env:
      OS: ${{ matrix.os }}
      JDK_VERSION: ${{ matrix.version }}
      JDK_TYPE: ${{ matrix.vm }}
      IMAGE_NAME: danysk/${{ matrix.vm }}-${{ matrix.version || 'latest' }}-${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Generate Dockerfile
        run: ruby generate_dockerfile.rb
      - name: Build Image on Linux
        if: "!contains(matrix.os, 'windows')"
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: danysk
        run: ./build.sh
      - name: Build Image on Windows
        if: contains(matrix.os, 'windows')
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: danysk
        run: |
          # add msys2 to the path so the correct exes are used
          $env:PATH="C:\msys64\usr\bin;${env:PATH}"
          C:\msys64\usr\bin\bash -c "./build.sh"
  manifest:
    needs: build
    strategy:
      matrix:
        version: [8, 11, '']
        vm: [hotspot, openj9]
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: danysk/${{ matrix.vm }}-${{ matrix.version || 'latest' }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_USERNAME: danysk
    steps:
      - name: Enable Docker manifest
        run: 'echo { \"experimental\": \"enabled\" } > ~/.docker/config.json'
      - name: Create manifest
        run: docker manifest create $IMAGE_NAME --amend $IMAGE_NAME-windows $IMAGE_NAME-ubuntu
      - name: Login on docker hub
        run: echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
      - name: Push manifest
        run: docker manifest push $IMAGE_NAME
